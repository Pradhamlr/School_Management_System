generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(STUDENT)
  createdAt DateTime @default(now())
  student   Student?
  teacher   Teacher?
}

model Student {
  id          Int                 @id @default(autoincrement())
  userId      Int                 @unique
  classId     Int
  dob         DateTime
  rollNumber  String              @unique
  user        User                @relation(fields: [userId], references: [id])
  class       Class               @relation(fields: [classId], references: [id])
  attendances StudentAttendance[]
}

model Teacher {
  id         Int      @id @default(autoincrement())
  userId     Int      @unique
  department String
  hireDate   DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])

  advisedClasses      Class[]               @relation("ClassTeacher")
  teachingAssignments TeacherClassSubject[]
  attendances         TeacherAttendance[]
}

model StudentAttendance {
  id        Int              @id @default(autoincrement())
  studentId Int
  date      DateTime
  status    AttendanceStatus @default(ABSENT)
  remarks   String?
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  student   Student          @relation(fields: [studentId], references: [id])

  @@unique([studentId, date])
}

model TeacherAttendance {
  id        Int              @id @default(autoincrement())
  teacherId Int
  date      DateTime
  status    AttendanceStatus @default(ABSENT)
  remarks   String?
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  teacher   Teacher          @relation(fields: [teacherId], references: [id])

  @@unique([teacherId, date])
}

model Class {
  id      Int     @id @default(autoincrement())
  name    String // e.g. "10"
  section String? // e.g. "A"

  classTeacherId Int?
  classTeacher   Teacher? @relation("ClassTeacher", fields: [classTeacherId], references: [id])

  students Student[]
  subjects TeacherClassSubject[]

  createdAt DateTime @default(now())
}

model Subject {
  id       Int                   @id @default(autoincrement())
  name     String
  code     String                @unique
  teachers TeacherClassSubject[]
}

model TeacherClassSubject {
  id        Int @id @default(autoincrement())
  teacherId Int
  subjectId Int
  classId   Int

  class   Class   @relation(fields: [classId], references: [id])
  teacher Teacher @relation(fields: [teacherId], references: [id])
  subject Subject @relation(fields: [subjectId], references: [id])

  @@unique([teacherId, subjectId])
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
}

enum AttendanceStatus {
  PRESENT
  ABSENT
  LATE
  EXCUSED
}
